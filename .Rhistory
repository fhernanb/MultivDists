mu2 <- rep(7, n)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
#psi  <- logit_inv(-2.4 + 2.1 * x2)
psi <- rep(0.2, n)
# The third lambda
l0 <- 3
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=5000)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~1,#x1+x2,
mu2.fo=y2~1,#x1+x2,
psi.fo=~1,#x2,
data=data2)
source("C:/Users/fhern/Desktop/my_github/MultivDists/R/marZIBP_Geoffroy.R")
source("C:/Users/fhern/Desktop/my_github/MultivDists/R/marZIBP_Geoffroy.R")
data1 <- rZIBP_Geoffroy(n=100, l1=l1, l2=l2, l0=l0, psi=psi)
data1 <- as.data.frame(data1)
# To fit the model
mod1 <- NULL
mod1 <- marZIBP_Geoffroy(mu1.fo=X1~1,
mu2.fo=X2~1,
psi.fo=~1,
data=data1)
# To obtain the usual summary table
summary(mod1)
# To obtain E(Y1)=v1 and E(Y2)=v2
mod1$fitted.mu1[1]
mod1$fitted.mu2[1]
# To compare sample means with v1 and v2
colMeans(data1)
# To obtain l0 and psi
mod1$fitted.l0
mod1$fitted.psi[1]
# To obtain l1 and l2
mod1$fitted.l1[1]
mod1$fitted.l2[1]
source("C:/Users/fhern/Desktop/my_github/MultivDists/R/marZIBP_Geoffroy.R")
mod1 <- marZIBP_Geoffroy(mu1.fo=X1~1,
mu2.fo=X2~1,
psi.fo=~1,
data=data1)
source("C:/Users/fhern/Desktop/my_github/MultivDists/R/marZIBP_Geoffroy.R")
mod1 <- marZIBP_Geoffroy(mu1.fo=X1~1,
mu2.fo=X2~1,
psi.fo=~1,
data=data1)
source("C:/Users/fhern/Desktop/my_github/MultivDists/R/marZIBP_Geoffroy.R")
data1 <- rZIBP_Geoffroy(n=1000, l1=l1, l2=l2, l0=l0, psi=psi)
data1 <- as.data.frame(data1)
# To fit the model
mod1 <- NULL
mod1 <- marZIBP_Geoffroy(mu1.fo=X1~1,
mu2.fo=X2~1,
psi.fo=~1,
data=data1)
gen_data_ZIBP_Geoffroy <- function(n=100) {
# To generate the covariates
x1 <- runif(n=n, min=0.49, max=0.51)
x2 <- runif(n=n, min=0.49, max=0.51)
# To generate the means
#mu1 <- exp(1 + 1.3 * x1 + 2.1 * x2)
#mu2 <- exp(1 + 1.3 * x1 + 2.1 * x2)
mu1 <- rep(5, n)
mu2 <- rep(7, n)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
#psi  <- logit_inv(-2.4 + 2.1 * x2)
psi <- rep(0.2, n)
# The third lambda
l0 <- 3
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=500)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~1,#x1+x2,
mu2.fo=y2~1,#x1+x2,
psi.fo=~1,#x2,
data=data2)
summary(mod2)
moments_estim_ZIBP_Geoffroy(cbind(data2$y1, data2$y2))
summary(mod2)
# To obtain E(Y1)=v1 and E(Y2)=v2
mod2$fitted.mu1[1]
mod2$fitted.mu2[1]
# To compare sample means with v1 and v2
colMeans(data1)
# To obtain l0 and psi
mod2$fitted.l0
mod2$fitted.psi[1]
gen_data_ZIBP_Geoffroy <- function(n=100) {
# To generate the covariates
x1 <- runif(n=n, min=0.49, max=0.51)
x2 <- runif(n=n, min=0.49, max=0.51)
# To generate the means
#mu1 <- exp(1 + 1.3 * x1 + 2.1 * x2)
#mu2 <- exp(1 + 1.3 * x1 + 2.1 * x2)
mu1 <- rep(5, n)
mu2 <- rep(7, n)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
#psi  <- logit_inv(-2.4 + 2.1 * x2)
psi <- rep(0.2, n)
# The third lambda
l0 <- 3
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=500)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~1,#x1+x2,
mu2.fo=y2~1,#x1+x2,
psi.fo=~1,#x2,
data=data2)
# To obtain E(Y1)=v1 and E(Y2)=v2
mod2$fitted.mu1[1]
mod2$fitted.mu2[1]
# To compare sample means with v1 and v2
colMeans(data1)
# To obtain E(Y1)=v1 and E(Y2)=v2
mod2$fitted.mu1[1]
mod2$fitted.mu2[1]
# To compare sample means with v1 and v2
colMeans(data2)
# To obtain l0 and psi
mod2$fitted.l0
mod2$fitted.psi[1]
# To obtain l1 and l2
mod2$fitted.l1[1]
mod2$fitted.l2[1]
head(data2, n=8)
gen_data_ZIBP_Geoffroy <- function(n=100) {
# To generate the covariates
x1 <- runif(n=n, min=0.49, max=0.51)
x2 <- runif(n=n, min=0.49, max=0.51)
# To generate the means
mu1 <- exp(1 + 1.3 * x1 + 2.1 * x2)
mu2 <- exp(1 + 1.3 * x1 + 2.1 * x2)
#mu1 <- rep(5, n)
#mu2 <- rep(7, n)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
psi  <- logit_inv(-2.4 + 2.1 * x2)
#psi <- rep(0.2, n)
# The third lambda
l0 <- 3
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=500)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~1,#x1+x2,
mu2.fo=y2~1,#x1+x2,
psi.fo=~1,#x2,
data=data2)
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1+x2,
mu2.fo=y2~x1+x2,
psi.fo=~x2,
data=data2)
head(data2, n=8)
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=500)
head(data2, n=8)
exp(1 + 1.3 * x1)
exp(1 + 1.3 * 0.5)
exp(1 + 2.1 * x2)
exp(1 + 2.1 * 0.5)
logit_inv <- function(x) exp(x) / (1+exp(x))
logit_inv(-2.4 + 2.1 * x2)
logit_inv(-2.4 + 2.1 * 0.5)
gen_data_ZIBP_Geoffroy <- function(n=100) {
# To generate the covariates
x1 <- runif(n=n, min=0.49, max=0.51)
x2 <- runif(n=n, min=0.49, max=0.51)
# To generate the means
mu1 <- exp(1 + 1.3 * x1)
mu2 <- exp(1 + 2.1 * x2)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
psi <- logit_inv(-2.4 + 2.1 * x2)
# The third lambda
l0 <- 3
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=500)
head(data2, n=8)
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
data2 <- gen_data_ZIBP_Geoffroy(n=1000)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
source("C:/Users/fhern/Desktop/my_github/MultivDists/R/marZIBP_Geoffroy.R")
# Example 1 ---------------------------------------------------------------
l1 <- 3
l2 <- 4
l0 <- 1.5
psi <- 0.20
set.seed(12345678)
data1 <- rZIBP_Geoffroy(n=1000, l1=l1, l2=l2, l0=l0, psi=psi)
data1 <- as.data.frame(data1)
# To fit the model
mod1 <- NULL
mod1 <- marZIBP_Geoffroy(mu1.fo=X1~1,
mu2.fo=X2~1,
psi.fo=~1,
data=data1)
# To obtain the usual summary table
summary(mod1)
# To obtain E(Y1)=v1 and E(Y2)=v2
mod1$fitted.mu1[1]
mod1$fitted.mu2[1]
# To compare sample means with v1 and v2
colMeans(data1)
# To obtain l0 and psi
mod1$fitted.l0
mod1$fitted.psi[1]
# To obtain l1 and l2
mod1$fitted.l1[1]
mod1$fitted.l2[1]
gen_data_ZIBP_Geoffroy <- function(n=100) {
# To generate the covariates
x1 <- runif(n=n, min=0.49, max=0.51)
x2 <- runif(n=n, min=0.49, max=0.51)
# To generate the means
mu1 <- exp(1 + 1.3 * x1)
mu2 <- exp(1 + 2.1 * x2)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
psi <- logit_inv(-2.4 + 2.1 * x2)
# The third lambda
l0 <- 3
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=1000)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=10000)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
gen_data_ZIBP_Geoffroy <- function(n=100) {
# To generate the covariates
x1 <- runif(n=n)
x2 <- runif(n=n)
# To generate the means
mu1 <- exp(1 + 1.3 * x1)
mu2 <- exp(1 + 2.1 * x2)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
psi <- logit_inv(-2.4 + 2.1 * x2)
# The third lambda
l0 <- 3
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=100)
gen_data_ZIBP_Geoffroy <- function(n=100) {
# To generate the covariates
x1 <- runif(n=n)
x2 <- runif(n=n)
# To generate the means
mu1 <- exp(1 + 1.3 * x1)
mu2 <- exp(1 + 2.1 * x2)
# To generate the psi
logit_inv <- function(x) exp(x) / (1+exp(x))
psi <- logit_inv(-2.4 + 2.1 * x2)
# The third lambda
l0 <- 1
# To obtain lambdas
l1 <- mu1 / (1-psi) - l0
l2 <- mu2 / (1-psi) - l0
# To generate Y1 and Y2
y <- NULL
for (i in 1:n)
y <- rbind(y, rZIBP_Geoffroy(n=1, l1=l1[i], l2=l2[i],
l0=l0, psi=psi[i]))
# To create the dataset
dataset <- data.frame(y1=y[,1], y2=y[,2],
x1=x1, x2=x2,
mu1=mu1, mu2=mu2,
l0=l0, psi=psi,
l1=l1, l2=l2)
return(dataset)
}
#set.seed(123456)
data2 <- gen_data_ZIBP_Geoffroy(n=100)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
data2 <- gen_data_ZIBP_Geoffroy(n=100)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
data2 <- gen_data_ZIBP_Geoffroy(n=100)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
data2 <- gen_data_ZIBP_Geoffroy(n=100)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
data2 <- gen_data_ZIBP_Geoffroy(n=500)
head(data2, n=8)
mod2 <- NULL
mod2 <- marZIBP_Geoffroy(mu1.fo=y1~x1,
mu2.fo=y2~x2,
psi.fo=~x2,
data=data2)
summary(mod2)
devtools::load_all()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
# Example 1 ---------------------------------------------------------------
l1 <- 3
l2 <- 4
l0 <- 1.5
psi <- 0.20
set.seed(12345678)
data1 <- rZIBP_Geoffroy(n=1000, l1=l1, l2=l2, l0=l0, psi=psi)
data1 <- as.data.frame(data1)
# To fit the model
mod1 <- NULL
mod1 <- marZIBP_Geoffroy(mu1.fo=X1~1,
mu2.fo=X2~1,
psi.fo=~1,
data=data1)
devtools::install()
library(pkgdown)
build_favicons(pkg = ".", overwrite = TRUE)
build_favicons(pkg = ".", overwrite = TRUE)
pkgdown::build_site()
devtools::load_all()
devtools::document()
l1 <- 5
l2 <- 3
psi <- 0.20
l0 <- 1.20
set.seed(12345)
data1 <- rZIBP_Geoffroy(n=500, l1=l1, l2=l2, l0=l0, psi=psi)
data1 <- as.data.frame(data1)
colnames(data1) <- c("y1", "y2")
data1
mod <- ZIBP_Geoffroy(l1.fo=y1~1,
l2.fo=y2~1,
psi.fo=~1,
data=data1)
summary(mod)
c(exp(mod$par[1:3]), mod$par[4])
moments_estim_ZIBP_Geoffroy(data1)
pkgdown::build_site()
devtools::install()
pkgdown::build_site()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
devtools::load_all()
devtools::document()
